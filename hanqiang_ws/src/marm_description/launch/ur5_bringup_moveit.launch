<launch>
    <!-- 状态发布 -->
    <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
        <param name="publish_frequency" type="double" value="50.0" />
        <param name="tf_prefix" type="string" value="" />
    </node>
    <!-- 发布所有注册的关节状态 -->
    <rosparam file="$(find marm_description)/config/joint_state_controller.yaml" command="load" />
    <node name="joint_state_controller_spawner" pkg="controller_manager" type="controller_manager" args="spawn joint_state_controller" respawn="false" output="screen" />
    <!-- 直接控制joints的位置 -->
    <rosparam file="$(find marm_description)/config/trajectory_control.yaml" command="load" />
    <node name="arm_controller_spawner" pkg="controller_manager" type="controller_manager" args="spawn arm_controller " respawn="false" output="screen" />
      <!--笛卡尔控制器 -->
    <rosparam file="$(find marm_description)/config/cartesian_controllers.yaml" command="load" />
    <node name="arm_cartesian_controller_spawner" pkg="controller_manager" type="controller_manager" args="spawn ur3_cartesian_velocity_controller_sim" respawn="false" output="screen"/>


    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
        <param name="/use_gui" value="false" />
        <rosparam param="/source_list">[/joint_states]</rosparam>
    </node>

    <include file="$(find ur5_gun)/launch/move_group.launch">
        <arg name="publish_monitored_planning_scene" value="true" />
    </include>
    <arg name="rviz_gui" default="true" />

    <group if="$(arg rviz_gui)">
        <include file="$(find ur5_gun)/launch/moveit_rviz.launch">
            <arg name="rviz_config" value="$(find ur5_gun)/launch/moveit.rviz" />
            <arg name="debug" value="false"/>
        </include>
    </group>

</launch>